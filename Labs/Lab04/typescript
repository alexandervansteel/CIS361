Script started on Tue Feb 14 15:35:47 2017
[?1034hbash-3.2$ cat lab4.c
#include <stdio.h>
#include <stdlib.h>

struct Mark {
	int x;
	int y;
};

typedef struct Mark Mark;

/* load the structure that p points to with the date from f */
void getInfo(FILE* f, Mark* p);

/* write the data stored in structure item into output file f */
void printInfo(FILE* f, Mark item);

/* compare what pointers a and b point to; to be used by qsort() */
int compare(const void* a, const void* b);

int main(){
	Mark list[100];
	Mark mark;
	int size = 0, i, col = 0;
	FILE *fin;

	fin = fopen ("lab4.dat", "r");
	if (fin == NULL){
		printf ("Cannot open file.\n");
		exit(1);
	}

	while (!feof(fin)){
		getInfo (fin, &mark);
		list[size++] = mark;
	}

	// use qsort() to sort data in list
  qsort(list, size, sizeof(Mark), compare);

	for (i = 0; i < size; i++){
		printInfo(stdout, list[i]);
		if (++col % 5 == 0)
			printf("\n");
	}
  printf("\n");

	fclose(fin);

	return 0;
}

/* complete the following helper functions */

void getInfo(FILE* f, Mark* p){
	// read two integers from the input file and
	// store them in the structure that p points to
  fscanf(f, "%d %d\n", &p->x, &p->y);
}

void printInfo(FILE* f, Mark item){
	// display each mark in format of (x, y)
	// and five marks per line
  fprintf(f, "(%d,%d) ", (int)item.x, (int)item.y);
}

int compare(const void* a, const void* b){
	// compare two structures
	// return  0 if ==
  // return -1 if a < b
	// return  1 if a > b
  struct Mark *mark1 = (struct Mark*)a;
  struct Mark *mark2 = (struct Mark*)b;

  if (mark1->x != mark2->x){
    return (int)mark1->x - (int)mark2->x;
  } else {
    return (int)mark1->y - (int)mark2->y;
  }
  return 0;
}
bash-3.2$ ./[K[Kgcc -Wall lab4.c -o lab4
bash-3.2$ ./lab4 
(15,10) (15,11) (15,12) (15,13) (15,14) 
(15,15) (16,9) (16,10) (16,11) (16,12) 
(16,13) (16,14) (16,15) (16,16) (17,8) 
(17,9) (17,16) (17,17) (18,7) (18,8) 
(18,17) (18,18) (19,6) (19,7) (19,18) 
(19,19) (20,6) (20,19) (21,6) (21,19) 
(22,5) (22,6) (22,19) (22,20) (23,5) 
(23,20) (24,5) (24,20) (25,5) (25,20) 
(26,5) (26,20) (27,5) (27,6) (27,19) 
(27,20) (28,6) (28,19) (29,6) (29,19) 
(30,6) (30,7) (30,18) (30,19) (31,7) 
(31,8) (31,17) (31,18) (32,8) (32,9) 
(32,16) (32,17) (33,9) (33,10) (33,11) 
(33,12) (33,13) (33,14) (33,16) (34,10) 
(34,11) (34,12) (34,13) (34,14) 
bash-3.2$ exit

Script done on Tue Feb 14 15:36:11 2017
